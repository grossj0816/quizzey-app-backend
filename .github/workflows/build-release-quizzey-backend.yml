name: build-release-quizzey-backend

on: [workflow_dispatch]

jobs:
  build:
      runs-on: ubuntu-latest

      steps:
        # Checkout repo
        - name: Git Checkout
          uses: actions/checkout@v3

        # Setup Python
        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'

        # Install AWS CLI
        - name: Install AWS CLI
          run: pip install awscli

        # Install Dependencies
        - name: Install Dependencies
          working-directory: ./quizzey-backend/lambdas
          run: pip install --target ./package boto3

        # Package Code
        - name: Package code
          working-directory: ./quizzey-backend/lambdas
          run: |
            cd package
            zip -r ../lambdas.zip .
            cd ..
            zip lambdas.zip *.py
            pwd; ls -la
            unzip -l lambdas.zip

        # Configure AWS Credentials
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        # Copy lambda zip to S3
        - name: Copy lambdas to S3
          working-directory: ./quizzey-backend
          run: |
            pwd; ls -la
            aws s3 ls s3://tu-api-lambda-deploys/quizzey_app/
            aws s3 cp --quiet lambdas/lambdas.zip s3://tu-api-lambda-deploys/quizzey_app/lambdas.zip
          # env:
          #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
          #   AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

        # # Deploy Terraform
        # - name: Deploying Terraform
        #   working-directory: ./quizzey-backend/terraform
        #   run: |
        #     rm -fr terraform.tfstate || echo 'Does not exist'
        #     terraform init -input=false
        #     terraform workspace new ${GITHUB_REF##*/} || echo 'Already exists'
        #     terraform workspace select ${GITHUB_REF##*/} && terraform apply -input=false -auto-approve
    